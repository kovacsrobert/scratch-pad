
#1
md5:		8363436878404da0ae3e46991e355b83
sha-1:		5a016facbcb77e2009a01ea5c67b39af209c3fcb
sha-256:	c876a332d7dd8da331cb8eee7ab7bf32752834d4b2b54eaa362674a2a48f64a6

#2
UPX packing -> PEID: UPX1
Unpacked

#3
imports:
	KERNEL32.DLL - dynamic link library, it handles memory management, input/output operations, and interrupts
	ADVAPI32.dll - api for security and registry calls
	MSVCRT.dll -  a module containing standard C library functions (part of the Microsoft C Runtime Library)
	WININET.dll - FTP, HTTP protocol API

calls:
	KERNEL32.DLL
		GetModuleFileNameA - Retrieves the fully qualified path for the file that contains the specified module
		CreateThread - Creates a thread to execute within the virtual address space of the calling process.
		ExitProcess - Ends the calling process and all its threads.
	
		CreateMutexA - Creates or opens a named or unnamed mutex object.
		OpenMutexA - Opens an existing named mutex object.
	
		SystemTimeToFileTime - converts between datetime datastructures
		CreateWaitableTimerA - Creates or opens a waitable timer object.
		SetWaitableTimer - Activates the specified waitable timer. When the due time arrives, the timer is signaled and the thread that set the timer calls the optional completion routine.
		WaitForSingleObject - Waits until the specified object is in the signaled state or the time-out interval elapses.
	
	ADVAPI32.dll
		OpenSCManagerA - Establishes a connection to the service control manager on the specified computer and opens the specified service control manager database.
		CreateServiceA - Creates a service object and adds it to the specified service control manager database.
		StartServiceCtrlDispatcherA - Connects the main thread of a service process to the service control manager, which causes the thread to be the service control dispatcher thread for the calling process.
	
	WININET.dll
		InternetOpenA - Initializes an application's use of the WinINet functions.
		InternetOpenUrlA - Opens a resource specified by a complete FTP or HTTP URL.
	
strings:
	MalService - not API call? could be service name
	HGL345 - mutex name?
	http://www.malwareanalysisbook.com
	Internet Explorer 8.0
	
main points:
	- creates a service
	- sets a timer, or wait for a file to be available
	- searches for an executable, maybe IE8 ?
	- access an URL, maybe http://www.malwareanalysisbook.com
	
possible functionality: 
	it makes sure that only 1 instance of the malware is running/infecting ?
	creates a service (MalService) which waits for either time or file
	when IE is not running, opens up the browser and navigate to URL ?

#4
	host indicators:
		HGL345 (if it is mutex name)
		MalService (as service name)
	network indicators:
		http://www.malwareanalysisbook.com